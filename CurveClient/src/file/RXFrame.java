package file;

import java.io.File;

import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class RXFrame extends JFrame {

    public RXFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        progress = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        okButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(262, 123));

        jLabel1.setText("Send! ");

        okButton.setText("Finished!");
        okButton.setEnabled(false);
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Already Finished: 0 bytes / 0 bytes");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                            .addComponent(progress, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(okButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(2, 2, 2)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(okButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
		this.setVisible(false);
	}//GEN-LAST:event_okButtonActionPerformed

	public void showProgress( int current ) {
		jLabel2.setText("Already Finished: " + current + " bytes / " + filesize + " bytes");
		progress.setValue( current*100/filesize );
	}

	public void done() {
		okButton.setEnabled(true);
	}

	public File getFile( String fname ) {
		JFileChooser fc = new JFileChooser();
		fc.setSelectedFile( new File(fname) );
		int result = fc.showSaveDialog(new JFrame());
		File recvfile;
		if (result == JFileChooser.APPROVE_OPTION) {
			recvfile = fc.getSelectedFile();
			filename = recvfile.getAbsolutePath();
			//System.out.println( filename );
			jLabel1.setText("Received" + filename);
			jLabel2.setText("Already Finished 0 bytes / " + filesize + " bytes");
			return recvfile;
		}
		else return null;
	}
	public void setFileInformation( String name, int size ) {
		filename = name;
		filesize = size;
	}
	public void setSrcname( String name ) {
		srcname = name;
	}
	public boolean confirm() {
		int n = JOptionPane.showConfirmDialog(this,
			srcname+"wants to send "+filename+"(Size: "+filesize+"bytes), do you want to receiveï¼Ÿ",
			"Please confirm!", JOptionPane.YES_NO_OPTION);
		if( n==JOptionPane.YES_OPTION ) return true;
		else return false;
	}

	private String filename;
	private int filesize;
	private String srcname;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton okButton;
    private javax.swing.JProgressBar progress;
    // End of variables declaration//GEN-END:variables

}
